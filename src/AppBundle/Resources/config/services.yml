
services:
  # Api Listeners
  app.api.request_listener:
     class: AppBundle\EventListener\ApiRequestListener
     arguments: ["@serializer"]
     tags:
         - { name: kernel.event_listener, event: kernel.controller, method: onKernelController }

  app.api.exception_listener:
     class: AppBundle\EventListener\ExceptionListener
     tags:
         - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }

  app.user.request_listener:
     class: AppBundle\EventListener\ActiveApiRequestListener
     arguments: [ "@security.token_storage", "@router", "@session", "@logger" ]
     tags:
         - { name: kernel.event_listener, event: kernel.request, method: onRequest }

  # Validators
  app.validator.duplicate_email:
     class: AppBundle\Validator\DuplicateEmailConstraintValidator
     arguments: [ "@doctrine.orm.entity_manager" ]
     tags:
          - { name: validator.constraint_validator, alias: duplicate_email_validator }

  # Doctrine Subscribers
  app.corporation.subscriber:
      class: AppBundle\Subscriber\CorporationSubscriber
      arguments: [ "@security.token_storage" ]
      tags:
          - { name: doctrine.event_subscriber, connection: default }

  app.api_credentials.subscriber:
      class: AppBundle\Subscriber\ApiCredentialsSubscriber
      arguments: [ "@security.token_storage", "@app.apikey.manager", "@app.account.manager" ]
      tags:
          - { name: doctrine.event_subscriber, connection: default }

  app.user.subscriber:
      class: AppBundle\Subscriber\UserSubscriber
      arguments: [ "@app.character.manager", "@session" ]
      tags:
          - { name: doctrine.event_subscriber, connection: default }

  # Dispatchers
  app.task.dispatcher:
      class: AppBundle\EventListener\Dispatcher

  # Task Events
  app.task.coporation.new:
      class: AppBundle\EventListener\Corporation\NewCorporationListener
      arguments: [ "@app.evedataupdate.service", "@doctrine.orm.entity_manager" ]
      tags:
          - { name: app.task.subscriber }

  app.task.belated_listener:
      class: AppBundle\EventListener\BelatedTaskListener
      arguments: [ "@app.task.dispatcher" ]
      tags:
        - { name: kernel.event_subscriber }

  # Manager
  app.corporation.manager:
      arguments: [ "@tarioch.pheal.factory" , "@doctrine", "@app.apikey.manager", "@logger" ]
      class: AppBundle\Service\Manager\CorporationManager

  app.markettransaction.manager:
      arguments: [ "@tarioch.pheal.factory" , "@evedata.registry","@doctrine",  "@logger" ]
      class: AppBundle\Service\Manager\MarketTransactionManager

  app.journaltransaction.manager:
      arguments: [ "@tarioch.pheal.factory" , "@evedata.registry", "@doctrine", "@logger" ]
      class: AppBundle\Service\Manager\JournalTransactionManager

  app.apikey.manager:
      arguments: [ "@tarioch.pheal.factory" , "@doctrine" ]
      class: AppBundle\Service\Manager\ApiKeyManager

  app.account.manager:
      arguments: [ "@tarioch.pheal.factory", "@doctrine" ]
      class: AppBundle\Service\Manager\AccountManager

  app.character.manager:
      arguments: [ "@logger" ]
      class: AppBundle\Service\Manager\CharacterManager

  app.starbase.manager:
      arguments: [ "@tarioch.pheal.factory", "@evedata.registry", "@doctrine" ]
      class: AppBundle\Service\Manager\StarbaseManager

  app.marketorder.manager:
      arguments: [ "@tarioch.pheal.factory", "@evedata.registry", "@doctrine" ]
      class: AppBundle\Service\Manager\MarketOrderManager

  app.asset.manager:
      arguments: [ "@tarioch.pheal.factory", "@evedata.registry", "@doctrine" ]
      class: AppBundle\Service\Manager\AssetManager

  app.evedataupdate.service:
      arguments: [ "@app.corporation.manager", "@app.account.manager", "@app.marketorder.manager", "@app.asset.manager", "@app.journaltransaction.manager", "@app.markettransaction.manager",  "@app.starbase.manager", "@doctrine", "@logger"]
      class: AppBundle\Service\EveDataUpdateService


